/*
 * LiftKit is a lightweight framework for clean, minimalist designs.
 * Copyright (c) 2024 Niklas Simandi
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
@use "sass:math";

@use "globals";
@use "blocks";
@use "colors";
@use "sizes";

.button__text {
  @include colors.fg__primary;

  position: relative;
  display: inline-block;
  overflow: hidden;
  padding: globals.round-to(math.div(globals.$SIZE-SM, globals.$MAJOR-HALF)) globals.round-to(globals.$SIZE-MD);
  text-decoration: none;

  // Ensure visual consistency across different buttons.
  border: 1px solid transparent;
  border-radius: 9999px; // round

  &.large {
    font-size: globals.round-to(globals.$SIZE-MD * globals.$MAJOR-HALF);
  }

  // Since the :has pseudo-class is newly available, provide a fallback to
  // manually specify which icons are present inside the button.
  // Do not use @extend-at rule as non-conforming browsers will drop the entire
  // rule!
  &.start {
    padding-right: globals.round-to(globals.$SIZE-MD * globals.$MAJOR-HALF);
    padding-left: globals.round-to(globals.$SIZE-SM);
  }

  &.end {
    padding-right: globals.round-to(globals.$SIZE-SM);
  }

  &:has(.button__icon.start) {
    padding-right: globals.round-to(globals.$SIZE-MD * globals.$MAJOR-HALF);
    padding-left: globals.round-to(globals.$SIZE-SM);
  }

  &:has(.button__icon.end) {
    padding-right: globals.round-to(globals.$SIZE-SM);
  }
}

.button {
  @extend .button__text;

  @include colors.bg__primary;
}

.button__outline {
  @extend .button__text;

  border-color: var(--outline);
  background-color: transparent;
}

.button__content {
  @include blocks.h-block;

  align-items: center;
  column-gap: globals.round-to(math.div(globals.$SIZE-MD * globals.$MAJOR-HALF, math.pow(globals.$MAJOR, 2)));
}

.button__icon {
  @include sizes.w__sm;
  @include sizes.h__sm;
}
