/*!
 * LiftKit is a lightweight framework for clean, minimalist designs.
 * Copyright (c) 2024 Niklas Simandi
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
@use "globals";

@mixin color-light__primary {
  color: var(--light__primary);
}

@mixin color-light__onprimary {
  color: var(--light__onprimary);
}

@mixin color-light__primarycontainer {
  color: var(--light__primarycontainer);
}

@mixin color-light__onprimarycontainer {
  color: var(--light__onprimarycontainer);
}

@mixin color-light__secondary {
  color: var(--light__secondary);
}

@mixin color-light__onsecondary {
  color: var(--light__onsecondary);
}

@mixin color-light__secondarycontainer {
  color: var(--light__secondarycontainer);
}

@mixin color-light__onsecondarycontainer {
  color: var(--light__onsecondarycontainer);
}

@mixin color-light__tertiary {
  color: var(--light__tertiary);
}

@mixin color-light__ontertiary {
  color: var(--light__ontertiary);
}

@mixin color-light__tertiarycontainer {
  color: var(--light__tertiarycontainer);
}

@mixin color-light__ontertiarycontainer {
  color: var(--light__ontertiarycontainer);
}

@mixin color-light__error {
  color: var(--light__error);
}

@mixin color-light__onerror {
  color: var(--light__onerror);
}

@mixin color-light__errorcontainer {
  color: var(--light__errorcontainer);
}

@mixin color-light__onerrorcontainer {
  color: var(--light__onerrorcontainer);
}

@mixin color-light__background {
  color: var(--light__background);
}

@mixin color-light__onbackground {
  color: var(--light__onbackground);
}

@mixin color-light__surface {
  color: var(--light__surface);
}

@mixin color-light__onsurface {
  color: var(--light__onsurface);
}

@mixin color-light__surfacevariant {
  color: var(--light__surfacevariant);
}

@mixin color-light__onsurfacevariant {
  color: var(--light__onsurfacevariant);
}

@mixin color-light__outline {
  color: var(--light__outline);
}

@mixin color-light__outlinevariant {
  color: var(--light__outlinevariant);
}

@mixin color-light__shadow {
  color: var(--light__shadow);
}

@mixin color-light__scrim {
  color: var(--light__scrim);
}

@mixin color-light__inversesurface {
  color: var(--light__inversesurface);
}

@mixin color-light__inverseonsurface {
  color: var(--light__inverseonsurface);
}

@mixin color-light__inverseprimary {
  color: var(--light__inverseprimary);
}

@mixin color-light__success {
  color: var(--light__success);
}

@mixin color-light__successcontainer {
  color: var(--light__successcontainer);
}

@mixin color-light__onsuccess {
  color: var(--light__onsuccess);
}

@mixin color-light__onsuccesscontainer {
  color: var(--light__onsuccesscontainer);
}

@mixin color-light__warning {
  color: var(--light__warning);
}

@mixin color-light__warningcontainer {
  color: var(--light__warningcontainer);
}

@mixin color-light__onwarning {
  color: var(--light__onwarning);
}

@mixin color-light__onwarningcontainer {
  color: var(--light__onwarningcontainer);
}

@mixin color-light__info {
  color: var(--light__info);
}

@mixin color-light__infocontainer {
  color: var(--light__infocontainer);
}

@mixin color-light__oninfo {
  color: var(--light__oninfo);
}

@mixin color-light__oninfocontainer {
  color: var(--light__oninfocontainer);
}

@mixin color-light__primaryfixed {
  color: var(--light__primaryfixed);
}

@mixin color-light__primaryfixeddim {
  color: var(--light__primaryfixeddim);
}

@mixin color-light__onprimaryfixed {
  color: var(--light__onprimaryfixed);
}

@mixin color-light__onprimaryfixedvariant {
  color: var(--light__onprimaryfixedvariant);
}

@mixin color-light__secondaryfixed {
  color: var(--light__secondaryfixed);
}

@mixin color-light__secondaryfixeddim {
  color: var(--light__secondaryfixeddim);
}

@mixin color-light__onsecondaryfixed {
  color: var(--light__onsecondaryfixed);
}

@mixin color-light__onsecondaryfixedvariant {
  color: var(--light__onsecondaryfixedvariant);
}

@mixin color-light__tertiaryfixed {
  color: var(--light__tertiaryfixed);
}

@mixin color-light__tertiaryfixeddim {
  color: var(--light__tertiaryfixeddim);
}

@mixin color-light__ontertiaryfixed {
  color: var(--light__ontertiaryfixed);
}

@mixin color-light__ontertiaryfixedvariant {
  color: var(--light__ontertiaryfixedvariant);
}

@mixin color-light__surfacedim {
  color: var(--light__surfacedim);
}

@mixin color-light__surfacebright {
  color: var(--light__surfacebright);
}

@mixin color-light__surfacecontainerlowest {
  color: var(--light__surfacecontainerlowest);
}

@mixin color-light__surfacecontainerlow {
  color: var(--light__surfacecontainerlow);
}

@mixin color-light__surfacecontainer {
  color: var(--light__surfacecontainer);
}

@mixin color-light__surfacecontainerhigh {
  color: var(--light__surfacecontainerhigh);
}

@mixin color-light__surfacecontainerhighest {
  color: var(--light__surfacecontainerhighest);
}

@mixin color-dark__primary {
  color: var(--dark__primary);
}

@mixin color-dark__onprimary {
  color: var(--dark__onprimary);
}

@mixin color-dark__primarycontainer {
  color: var(--dark__primarycontainer);
}

@mixin color-dark__onprimarycontainer {
  color: var(--dark__onprimarycontainer);
}

@mixin color-dark__secondary {
  color: var(--dark__secondary);
}

@mixin color-dark__onsecondary {
  color: var(--dark__onsecondary);
}

@mixin color-dark__secondarycontainer {
  color: var(--dark__secondarycontainer);
}

@mixin color-dark__onsecondarycontainer {
  color: var(--dark__onsecondarycontainer);
}

@mixin color-dark__tertiary {
  color: var(--dark__tertiary);
}

@mixin color-dark__ontertiary {
  color: var(--dark__ontertiary);
}

@mixin color-dark__tertiarycontainer {
  color: var(--dark__tertiarycontainer);
}

@mixin color-dark__ontertiarycontainer {
  color: var(--dark__ontertiarycontainer);
}

@mixin color-dark__error {
  color: var(--dark__error);
}

@mixin color-dark__onerror {
  color: var(--dark__onerror);
}

@mixin color-dark__errorcontainer {
  color: var(--dark__errorcontainer);
}

@mixin color-dark__onerrorcontainer {
  color: var(--dark__onerrorcontainer);
}

@mixin color-dark__background {
  color: var(--dark__background);
}

@mixin color-dark__onbackground {
  color: var(--dark__onbackground);
}

@mixin color-dark__surface {
  color: var(--dark__surface);
}

@mixin color-dark__onsurface {
  color: var(--dark__onsurface);
}

@mixin color-dark__surfacevariant {
  color: var(--dark__surfacevariant);
}

@mixin color-dark__onsurfacevariant {
  color: var(--dark__onsurfacevariant);
}

@mixin color-dark__outline {
  color: var(--dark__outline);
}

@mixin color-dark__outlinevariant {
  color: var(--dark__outlinevariant);
}

@mixin color-dark__shadow {
  color: var(--dark__shadow);
}

@mixin color-dark__scrim {
  color: var(--dark__scrim);
}

@mixin color-dark__inversesurface {
  color: var(--dark__inversesurface);
}

@mixin color-dark__inverseonsurface {
  color: var(--dark__inverseonsurface);
}

@mixin color-dark__inverseprimary {
  color: var(--dark__inverseprimary);
}

@mixin color-dark__success {
  color: var(--dark__success);
}

@mixin color-dark__successcontainer {
  color: var(--dark__successcontainer);
}

@mixin color-dark__onsuccess {
  color: var(--dark__onsuccess);
}

@mixin color-dark__onsuccesscontainer {
  color: var(--dark__onsuccesscontainer);
}

@mixin color-dark__warning {
  color: var(--dark__warning);
}

@mixin color-dark__warningcontainer {
  color: var(--dark__warningcontainer);
}

@mixin color-dark__onwarning {
  color: var(--dark__onwarning);
}

@mixin color-dark__onwarningcontainer {
  color: var(--dark__onwarningcontainer);
}

@mixin color-dark__info {
  color: var(--dark__info);
}

@mixin color-dark__infocontainer {
  color: var(--dark__infocontainer);
}

@mixin color-dark__oninfo {
  color: var(--dark__oninfo);
}

@mixin color-dark__oninfocontainer {
  color: var(--dark__oninfocontainer);
}

@mixin color-dark__primaryfixed {
  color: var(--dark__primaryfixed);
}

@mixin color-dark__primaryfixeddim {
  color: var(--dark__primaryfixeddim);
}

@mixin color-dark__onprimaryfixed {
  color: var(--dark__onprimaryfixed);
}

@mixin color-dark__onprimaryfixedvariant {
  color: var(--dark__onprimaryfixedvariant);
}

@mixin color-dark__secondaryfixed {
  color: var(--dark__secondaryfixed);
}

@mixin color-dark__secondaryfixeddim {
  color: var(--dark__secondaryfixeddim);
}

@mixin color-dark__onsecondaryfixed {
  color: var(--dark__onsecondaryfixed);
}

@mixin color-dark__onsecondaryfixedvariant {
  color: var(--dark__onsecondaryfixedvariant);
}

@mixin color-dark__tertiaryfixed {
  color: var(--dark__tertiaryfixed);
}

@mixin color-dark__tertiaryfixeddim {
  color: var(--dark__tertiaryfixeddim);
}

@mixin color-dark__ontertiaryfixed {
  color: var(--dark__ontertiaryfixed);
}

@mixin color-dark__ontertiaryfixedvariant {
  color: var(--dark__ontertiaryfixedvariant);
}

@mixin color-dark__surfacedim {
  color: var(--dark__surfacedim);
}

@mixin color-dark__surfacebright {
  color: var(--dark__surfacebright);
}

@mixin color-dark__surfacecontainerlowest {
  color: var(--dark__surfacecontainerlowest);
}

@mixin color-dark__surfacecontainerlow {
  color: var(--dark__surfacecontainerlow);
}

@mixin color-dark__surfacecontainer {
  color: var(--dark__surfacecontainer);
}

@mixin color-dark__surfacecontainerhigh {
  color: var(--dark__surfacecontainerhigh);
}

@mixin color-dark__surfacecontainerhighest {
  color: var(--dark__surfacecontainerhighest);
}
