/*
 * LiftKit is a lightweight framework for clean, minimalist designs.
 * Copyright (c) 2024 Niklas Simandi
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
@use "sass:math";

$SCALE: math.div(1.0 + math.sqrt(5.0), 2.0) !default; // ϕ
$PRECISION: 3 !default;

$MAJOR: math.pow($SCALE, 1.0); // ϕ^1
$MAJOR-HALF: math.pow($SCALE, .5); // √ϕ
$MAJOR-QUARTER: math.pow($SCALE, .25); // ϕ^1/4
$MAJOR-EIGHT: math.pow($SCALE, .125); // ϕ^1/8

$MINOR: $MAJOR - 1.0; // ϕ - 1
$MINOR-HALF: $MAJOR-HALF - 1.0; // √ϕ - 1
$MINOR-QUARTER: $MAJOR-QUARTER - 1.0; // ϕ^1/4 - 1

$SIZE-2XS: 1em * math.pow($SCALE, -3.0);
$SIZE-XS: 1em * math.pow($SCALE, -2.0);
$SIZE-SM: 1em * math.pow($SCALE, -1.0);
$SIZE-MD: 1em * math.pow($SCALE, 0.0);
$SIZE-LG: 1em * math.pow($SCALE, 1.0);
$SIZE-XL: 1em * math.pow($SCALE, 2.0);
$SIZE-2XL: 1em * math.pow($SCALE, 3.0);
$SIZE-3XL: 1em * math.pow($SCALE, 4.0);

$SIZE-4XL: 1em * math.pow($SCALE, 5.0);

@function round-to($number, $ndigits: $PRECISION) {
  @if type-of($number) != number {
    @error "#{$number} is not a number";
  }
  @if $ndigits < 0 {
    @error "#{$ndigits} is negative";
  }
  @if $ndigits == 0 {
    @return round($number);
  }
  $factor: 1;
  @for $_ from 1 through $ndigits {
    $factor: $factor * 10;
  }
  @return math.div(round($number * $factor), $factor);
}
