/*!
 * LiftKit is a lightweight framework for clean, minimalist designs.
 * Copyright (c) 2024 Niklas Simandi
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
@use "sass:math";

$PHI: math.div(1 + math.sqrt(5), 2) !default;

@function strip_unit($n) {
  @if type-of($n) != number {
    @error "#{$n} is not a number";
  }
  @if unitless($n) {
    @return $n;
  }
  @return math.div($n, $n * 0 + 1);
}

@function round_to($x, $num: 4) {
  @if type-of($x) != number {
    @error "#{$x} is not a number";
  }
  @if $num == 0 {
    @return round($x);
  }
  @if $num < 0 {
    @error "#{$num} is negative";
  }
  $n: 1;
  @for $_ from 1 through $num {
    $n: $n * 10;
  }
  @return math.div(round($x * $n), $n);
}

@function scale_to($n, $dim: null) {
  @if type-of($n) != number {
    @error "#{$n} is not a number";
  }
  @if not unitless($n) {
    @warn "#{$n} is not dimensionless";
    $n: strip_unit($n);
  }
  @if $dim == null {
    @return round_to(math.pow($PHI, $n));
  } @else if $dim == rem {
    @return round_to(1rem * math.pow($PHI, $n));
  } @else if $dim == em {
    @return round_to(1em * math.pow($PHI, $n));
  } @else {
    @error "#{$dim} is not a valid unit";
  }
}

$MAJOR: round_to($PHI);
$MAJOR-HALF: scale_to(0.5);
$MAJOR-QUARTER: scale_to(0.25);
$MAJOR-EIGHT: scale_to(0.125);

$MINOR: $MAJOR - 1;
$MINOR-HALF: $MAJOR-HALF - 1;
$MINOR-QUARTER: $MAJOR-QUARTER - 1;
$MINOR-EIGHT: $MAJOR-EIGHT - 1;

:root {
  --XXS: #{scale_to(-3, em)};
  --XS: #{scale_to(-2, em)};
  --S: #{scale_to(-1, em)};
  --M: #{scale_to(0, em)};
  --L: #{scale_to(1, em)};
  --XL: #{scale_to(2, em)};
  --XXL: #{scale_to(3, em)};
  --XXXL: #{scale_to(4, em)};
  --XXXXL: #{scale_to(5, em)};

  --light__background: #fefbff;
  --light__onsurface: #1b1b1f;
  --light__primary: #4658ac;
  --light__surfacecontainerlowest: #fff;
  --light__onsurfacevariant: #45464f;
  --dark__outline: #90909a;
  --dark__error: #ffb4ab;
  --dark__primary: #b9c3ff;

  --light__onprimary: #fefbff;
  --light__outlinevariant: #c6c5d0;
  --light__shadow: #000;
  --light__info: #1758c7;
  --light__secondary: #5a5d72;
  --light__outline: #767680;
  --light__inverseprimary: #b9c3ff;
  --light__surfacecontainerlow: #cbdadd;
  --light__successcontainer: #92f8b4;
  --light__onsuccesscontainer: #00210f;
  --light__infocontainer: #dae2ff;
  --light__oninfocontainer: #001946;
  --light__warningcontainer: #ffdea7;
  --light__onwarningcontainer: #271900;
  --light__errorcontainer: #ffdad6;
  --light__onerrorcontainer: #410002;
  --light__onsecondarycontainer: #171b2c;
  --light__primarycontainer: #dee1ff;
  --light__onprimarycontainer: #001258;
  --light__onsecondary: #fff;
  --light__secondarycontainer: #dfe1f9;
  --light__tertiary: #76546e;
  --light__ontertiary: #fff;
  --light__tertiarycontainer: #ffd7f2;
  --light__ontertiarycontainer: #2d1228;
  --light__error: #ba1a1a;
  --light__onerror: #fff;
  --light__onbackground: #1b1b1f;
  --light__surface: #e8eced;
  --light__surfacevariant: #e3e1ec;
  --light__scrim: #000;
  --light__inversesurface: #303034;
  --light__inverseonsurface: #f3f0f4;
  --light__success: #006d3d;
  --light__onsuccess: #fff;
  --light__warning: #7c5800;
  --light__onwarning: #fff;
  --light__oninfo: #fff;
  --light__primaryfixed: #dee1ff;
  --light__onprimaryfixed: #001258;
  --light__primaryfixeddim: #b9c3ff;
  --light__onprimaryfixedvariant: #2d3f93;
  --light__secondaryfixed: #dfe1f9;
  --light__onsecondaryfixed: #171b2c;
  --light__secondaryfixeddim: #c3c5dd;
  --light__onsecondaryfixedvariant: #434659;
  --light__tertiaryfixed: #ffd7f2;
  --light__ontertiaryfixed: #2d1228;
  --light__tertiaryfixeddim: #e5bad8;
  --light__ontertiaryfixedvariant: #5c3c55;
  --light__surfacedim: #dcd9de;
  --light__surfacebright: #fbf8fd;
  --light__surfacecontainer: #f0edf1;
  --light__surfacecontainerhigh: #eae7ec;
  --light__surfacecontainerhighest: #e4e1e6;

  --dark__onprimary: #11277c;
  --dark__primarycontainer: #2d3f93;
  --dark__onprimarycontainer: #dee1ff;
  --dark__secondary: #c3c5dd;
  --dark__onsecondary: #2c2f42;
  --dark__secondarycontainer: #434659;
  --dark__onsecondarycontainer: #dfe1f9;
  --dark__tertiary: #e5bad8;
  --dark__ontertiary: #44263e;
  --dark__tertiarycontainer: #5c3c55;
  --dark__ontertiarycontainer: #ffd7f2;
  --dark__onerror: #690005;
  --dark__errorcontainer: #93000a;
  --dark__onerrorcontainer: #ffb4ab;
  --dark__background: #1b1b1f;
  --dark__onbackground: #e4e1e6;
  --dark__surface: #131316;
  --dark__onsurface: #e4e1e6;
  --dark__onsurfacevariant: #c6c5d0;
  --dark__surfacevariant: #45464f;
  --dark__shadow: #000;
  --dark__inversesurface: #e4e1e6;
  --dark__scrim: #000;
  --dark__inverseonsurface: #303034;
  --dark__inverseprimary: #4658ac;
  --dark__success: #76db9a;
  --dark__onsuccess: #00391d;
  --dark__successcontainer: #00522c;
  --dark__onsuccesscontainer: #92f8b4;
  --dark__warning: #f7bd48;
  --dark__onwarning: #412d00;
  --dark__warningcontainer: #5e4200;
  --dark__onwarningcontainer: #ffdea7;
  --dark__info: #b1c5ff;
  --dark__oninfo: #002c71;
  --dark__infocontainer: #00419e;
  --dark__oninfocontainer: #dae2ff;
  --dark__primaryfixed: #dee1ff;
  --dark__onprimaryfixed: #001258;
  --dark__primaryfixeddim: #b9c3ff;
  --dark__onprimaryfixedvariant: #2d3f93;
  --dark__secondaryfixed: #dfe1f9;
  --dark__secondaryfixeddim: #c3c5dd;
  --dark__onsecondaryfixed: #171b2c;
  --dark__onsecondaryfixedvariant: #434659;
  --dark__tertiaryfixed: #ffd7f2;
  --dark__ontertiaryfixed: #2d1228;
  --dark__tertiaryfixeddim: #e5bad8;
  --dark__ontertiaryfixedvariant: #5c3c55;
  --dark__surfacedim: #131316;
  --dark__surfacebright: #39393c;
  --dark__surfacecontainerlowest: #0e0e11;
  --dark__surfacecontainer: #1f1f23;
  --dark__surfacecontainerhigh: #2a2a2d;
  --dark__surfacecontainerhighest: #353438;
  --dark__surfacecontainerlow: #1b1b1f;
  --dark__outlinevariant: #45464f;
}
